@import 'variables.scss';

@media (min-width: $breakpoint-tablet){
    .menuPanel {
        $panelWidth: 80px;
        $iconGap: 10px;
        $nrOfElements: 5;
    
        position: fixed;
    
        transition: 1s;
        bottom: calc(-8vh * $nrOfElements);
    
        right:calc(-2 * $panelWidth);
        z-index: 10;
        padding: 10px 10px 10px 10px;
        opacity: 0;
    
        .indicator {
            //      MAKE IT SO THE INDICATOR CHANGES SVGS BASED ON WHICH SECTION THE PAGE IS
            //  CURRENTLY ON OR BASED ON WHICH BUTTON THE CURSOR IS OVER
    
    
            width: calc($panelWidth - 2 * $iconGap);
            height: calc($panelWidth - 2 * $iconGap);
            margin-bottom: 3em;
            stroke: #8e8b93;
            stroke-width: 1.5px;
            padding: $iconGap;
    
            border-radius: 100%;
    
            backdrop-filter: blur(15px);
            position: relative;
            margin-left: auto;
            margin-right: 1em;
    
            transition: 1s;
            right: 0;
            opacity: 1;
        }
        .indicator::after{
            content: "";
            position: absolute;
            top: 0; left: 0; bottom: 0; right: 0;
            border: 3px solid rgba($panelColor, 0.25);
            
            animation-name: breathing;
            animation-duration: 10s;
            animation-iteration-count: infinite;
    
            border-radius: 100%;
    
            transition: border-color 1s;
        }
    
        .scrollContainer {
            display: flex;
            flex-direction: column;
            height: fit-content;
            width: $panelWidth;
            padding-right: 100px;
            
            a {
                border: 3px solid rgba($panelColor, 0.1);
                margin: 2px;
                padding: 2vh 1em;
                width: 20vw;
                height: 2.5vh;
                background-image: linear-gradient(to left, rgba($secondaryColor, 0.5), transparent);
                overflow: hidden;
                backdrop-filter: blur(25px);
            
                display: flex;
                justify-content: flex-start;
                align-items: center;

                text-decoration: none;
                font-family: Poppins;
                font-weight: 300;
                letter-spacing: 0.1em;
    
                transform: translateX(0);
                opacity: 0;
                transition: 1s;
    
                will-change: transform, backdrop-filter;
            }
            a:hover{
                transform: translateX(-5vw);
            }
    
    
            a:first-of-type{
                border-radius: 15px 0 0 0;
            }
            a:last-of-type{
                border-radius: 0 0 0 15px;
            }
        }
    }
    
    .menuPanel:hover {
        bottom: 0;
    
        .indicator {
            right: -80px;
            opacity: 0;
        }
        .indicator::after {
            border-color: rgba($panelColor, 0.7);
        }
    
        .container a{
            opacity: 1;
        }
    }
    
    .menuPanel.visible {
        opacity: 1; /* Pop-up into view */
        right: 0;
    }
}

// Panel for phones
@media (max-width: $breakpoint-tablet){
    .menuPanel {
        $indicatorSize: min(20vh, 20vw);

        position: fixed;
        z-index: 100;
        height: 60vh;
        left: 0; right: 0;
        bottom: calc(-60vh + $indicatorSize + min(4vw, 4vh));

        transform: translateY(80vh);

        transition: 1.5s;

        display: flex;
        justify-content: flex-start;
        align-items: center;
        flex-direction: column;

        .indicator {
            $size: $indicatorSize;
            width: $size; height: $size;
            stroke: white;
            
            
            border-radius: 100%;
            backdrop-filter: blur(10px);
            border: 3px solid rgba($panelColor, 0.1);
            padding: 3px;
        }

        .phoneOnly {
            width: 100%;
            height: calc($indicatorSize + 12px);
            position: absolute;

            display: flex;
            justify-content: space-between;
            align-items: flex-end;

            .filler{
                width: calc(50vw - $indicatorSize);
                height: 50%;
                overflow: hidden;

                position: relative;
                .corner {
                    width: calc($indicatorSize / 2);
                    height: 100%;
                    bottom: 0;
                    background-color: rgba(0,0,0,0);
                }
            }
        }

        .container {
            overflow-x: scroll;
            width: 100%;
            height: 100%;
            overflow-y: hidden;
            
            position: relative;

            border-top: 3px solid rgba($panelColor, 0.1);

            backdrop-filter: blur(10px);
            .scrollContainer {
                height: 100%;
                display: flex;
                justify-content: flex-start;
                width: fit-content;
                align-items: center;
                gap: 10vw;
                padding: 0 10vw;

                position: relative;
                a {
                    width: 76vw;
                    height: 90%;
                    font-size: 1.5rem;
                    letter-spacing: 0.3em;
                    font-weight: 300;
                    text-align: center;
                    align-content: center;
                    text-decoration: none;

                    position: relative;

                    border-radius: 5px;
                    border: 3px solid rgba($panelColor, 0.7);

                    background-image: linear-gradient(to bottom, rgba($secondaryColor, 0.9), rgba($secondaryColor, 0.2));
                }
            }
        }
    }

    .menuPanel:hover{
        bottom: 0;
    }

    .menuPanel.visible{
        transform: translateY(0);
    }
}


@keyframes breathing {
    0% {
        box-shadow: 0px 0px 15px rgba($secondaryColor, 0.3);
    }
    50% {
        box-shadow: 0px 0px 30px rgba($secondaryColor, 1);
    }
    100% {
        box-shadow: 0px 0px 15px rgba($secondaryColor, 0.3);
    }
}